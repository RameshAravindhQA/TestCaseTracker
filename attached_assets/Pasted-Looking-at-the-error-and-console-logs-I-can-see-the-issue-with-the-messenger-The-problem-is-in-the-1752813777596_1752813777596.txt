Looking at the error and console logs, I can see the issue with the messenger. The problem is in the message storage and retrieval flow. Let me analyze the issues:

WebSocket Connection Failed: The console shows WebSocket connection failures
Message Storage Issue: Messages are being created but not properly associated with conversations
Conversation Management: The direct conversation creation and message retrieval logic has gaps
Let me fix the storage and messenger components:

TestCaseTracker/server/storage.ts
Fix message storage and conversation management, Fix getDirectConversation to properly find existing conversations, Fix getMessagesByChat to handle different ID types
TestCaseTracker/server/routes.ts
Fix message creation endpoint to handle both conversation and direct message formats Fix message creation endpoint to handle both conversation and direct message formats Update messages retrieval endpoint
TestCaseTracker/client/src/components/chat/messenger.tsx
Fix WebSocket connection and message handling, Fix message sending to ensure proper conversation handling, Add connection status indicator to messenger header
Now let me also fix the WebSocket setup file to ensure proper connection handling:

TestCaseTracker/server/websocket-setup.ts
Ensure WebSocket server is properly configured
These changes should fix the messenger issues:

Fixed message storage to properly handle conversation creation and message association
Enhanced conversation management to find existing direct conversations or create new ones
Improved WebSocket connection with proper error handling and reconnection logic
Fixed message endpoints to handle both conversation-based and direct message formats
Added connection status indicator so users can see if they're online/offline
The key fixes address:

Messages being created but not showing in conversations
WebSocket connection failures being handled gracefully
Proper conversation ID handling for direct messages
Better error handling throughout the message flow